{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass BaseAccordion extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      openIndexes: [0]\n    });\n\n    _defineProperty(this, \"handleItemClick\", index => {\n      this.internalSetState(state => {\n        const closing = state.openIndexes.includes(index);\n        return {\n          type: closing ? 'closing' : 'opening',\n          openIndexes: closing ? state.openIndexes.filter(i => i !== index) : [...state.openIndexes, index]\n        };\n      });\n      console.log('clicked');\n    });\n  }\n\n  getState(state = this.state) {\n    return {\n      openIndexes: this.props.openIndexes === undefined ? state.openIndexes : this.props.openIndexes\n    };\n  }\n\n  internalSetState(changes, callback = () => {}) {\n    let allChanges;\n    this.setState(state => {\n      const actualState = this.getState(state);\n      const changesObject = typeof changes === 'function' ? changes(actualState) : changes;\n      allChanges = this.props.stateReducer(actualState, changesObject);\n      return allChanges;\n    }, () => {\n      this.props.onStateChange(allChanges);\n      callback();\n    });\n  }\n\n  render() {\n    return this.props.children({\n      openIndexes: this.getState().openIndexes,\n      handleItemClick: this.handleItemClick\n    });\n  }\n\n}\n\n_defineProperty(BaseAccordion, \"defaultProps\", {\n  stateReducer: (state, changes) => changes,\n  onStateChange: () => {}\n});\n\nexport { BaseAccordion };","map":{"version":3,"sources":["/home/hal/github/CDN/CDN-Website/src/components/accordion/base-accordion.js"],"names":["React","BaseAccordion","Component","openIndexes","index","internalSetState","state","closing","includes","type","filter","i","console","log","getState","props","undefined","changes","callback","allChanges","setState","actualState","changesObject","stateReducer","onStateChange","render","children","handleItemClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;;AAAA,mCAKlC;AAAEC,MAAAA,WAAW,EAAE,CAAC,CAAD;AAAf,KALkC;;AAAA,6CA8BvBC,KAAD,IAAW;AAC3B,WAAKC,gBAAL,CAAuBC,KAAD,IAAW;AAC/B,cAAMC,OAAO,GAAGD,KAAK,CAACH,WAAN,CAAkBK,QAAlB,CAA2BJ,KAA3B,CAAhB;AACA,eAAO;AACLK,UAAAA,IAAI,EAAEF,OAAO,GAAG,SAAH,GAAe,SADvB;AAELJ,UAAAA,WAAW,EAAEI,OAAO,GAChBD,KAAK,CAACH,WAAN,CAAkBO,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,KAAKP,KAAtC,CADgB,GAEhB,CAAC,GAAGE,KAAK,CAACH,WAAV,EAAuBC,KAAvB;AAJC,SAAP;AAMD,OARD;AASAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAzCyC;AAAA;;AAM1CC,EAAAA,QAAQ,CAACR,KAAK,GAAG,KAAKA,KAAd,EAAqB;AAC3B,WAAO;AACLH,MAAAA,WAAW,EACT,KAAKY,KAAL,CAAWZ,WAAX,KAA2Ba,SAA3B,GACIV,KAAK,CAACH,WADV,GAEI,KAAKY,KAAL,CAAWZ;AAJZ,KAAP;AAMD;;AACDE,EAAAA,gBAAgB,CAACY,OAAD,EAAUC,QAAQ,GAAG,MAAM,CAAE,CAA7B,EAA+B;AAC7C,QAAIC,UAAJ;AACA,SAAKC,QAAL,CACGd,KAAD,IAAW;AACT,YAAMe,WAAW,GAAG,KAAKP,QAAL,CAAcR,KAAd,CAApB;AACA,YAAMgB,aAAa,GACjB,OAAOL,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACI,WAAD,CAAvC,GAAuDJ,OADzD;AAEAE,MAAAA,UAAU,GAAG,KAAKJ,KAAL,CAAWQ,YAAX,CAAwBF,WAAxB,EAAqCC,aAArC,CAAb;AACA,aAAOH,UAAP;AACD,KAPH,EAQE,MAAM;AACJ,WAAKJ,KAAL,CAAWS,aAAX,CAAyBL,UAAzB;AACAD,MAAAA,QAAQ;AACT,KAXH;AAaD;;AAaDO,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,KAAL,CAAWW,QAAX,CAAoB;AACzBvB,MAAAA,WAAW,EAAE,KAAKW,QAAL,GAAgBX,WADJ;AAEzBwB,MAAAA,eAAe,EAAE,KAAKA;AAFG,KAApB,CAAP;AAID;;AA/CyC;;gBAAtC1B,a,kBACkB;AACpBsB,EAAAA,YAAY,EAAE,CAACjB,KAAD,EAAQW,OAAR,KAAoBA,OADd;AAEpBO,EAAAA,aAAa,EAAE,MAAM,CAAE;AAFH,C;;AAiDxB,SAASvB,aAAT","sourcesContent":["import React from 'react';\n\nclass BaseAccordion extends React.Component {\n  static defaultProps = {\n    stateReducer: (state, changes) => changes,\n    onStateChange: () => {},\n  };\n  state = { openIndexes: [0] };\n  getState(state = this.state) {\n    return {\n      openIndexes:\n        this.props.openIndexes === undefined\n          ? state.openIndexes\n          : this.props.openIndexes,\n    };\n  }\n  internalSetState(changes, callback = () => {}) {\n    let allChanges;\n    this.setState(\n      (state) => {\n        const actualState = this.getState(state);\n        const changesObject =\n          typeof changes === 'function' ? changes(actualState) : changes;\n        allChanges = this.props.stateReducer(actualState, changesObject);\n        return allChanges;\n      },\n      () => {\n        this.props.onStateChange(allChanges);\n        callback();\n      }\n    );\n  }\n  handleItemClick = (index) => {\n    this.internalSetState((state) => {\n      const closing = state.openIndexes.includes(index);\n      return {\n        type: closing ? 'closing' : 'opening',\n        openIndexes: closing\n          ? state.openIndexes.filter((i) => i !== index)\n          : [...state.openIndexes, index],\n      };\n    });\n    console.log('clicked');\n  };\n  render() {\n    return this.props.children({\n      openIndexes: this.getState().openIndexes,\n      handleItemClick: this.handleItemClick,\n    });\n  }\n}\n\nexport { BaseAccordion };\n"]},"metadata":{},"sourceType":"module"}