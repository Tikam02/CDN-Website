{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hal/github/CDN/CDN-Website/src/components/drawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport { Box } from 'theme-ui';\nimport RcDrawer from 'rc-drawer';\n\nconst Drawer = (_ref) => {\n  let {\n    className,\n    children,\n    closeButton,\n    closeButtonStyle,\n    drawerHandler,\n    toggleHandler,\n    open,\n    width,\n    placement,\n    drawerStyle,\n    closeBtnStyle\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"closeButton\", \"closeButtonStyle\", \"drawerHandler\", \"toggleHandler\", \"open\", \"width\", \"placement\", \"drawerStyle\", \"closeBtnStyle\"]);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RcDrawer, _objectSpread(_objectSpread({\n      open: open,\n      onClose: toggleHandler,\n      className: `drawer ${className ? className : ''}`.trim(),\n      width: width,\n      placement: placement,\n      handler: false,\n      level: null,\n      duration: \"0.4s\"\n    }, props), {}, {\n      children: [closeButton && /*#__PURE__*/_jsxDEV(Box, {\n        as: \"div\",\n        onClick: toggleHandler,\n        sx: closeBtnStyle,\n        children: closeButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: drawerStyle,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"drawer__handler\",\n      style: {\n        display: 'inline-block'\n      },\n      onClick: toggleHandler,\n      children: drawerHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nDrawer.defaultProps = {\n  width: '320px',\n  placement: 'left'\n};\nexport default Drawer;","map":{"version":3,"sources":["/home/hal/github/CDN/CDN-Website/src/components/drawer.js"],"names":["React","Fragment","Box","RcDrawer","Drawer","className","children","closeButton","closeButtonStyle","drawerHandler","toggleHandler","open","width","placement","drawerStyle","closeBtnStyle","props","trim","display","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,UAaT;AAAA,MAbU;AACdC,IAAAA,SADc;AAEdC,IAAAA,QAFc;AAGdC,IAAAA,WAHc;AAIdC,IAAAA,gBAJc;AAKdC,IAAAA,aALc;AAMdC,IAAAA,aANc;AAOdC,IAAAA,IAPc;AAQdC,IAAAA,KARc;AASdC,IAAAA,SATc;AAUdC,IAAAA,WAVc;AAWdC,IAAAA;AAXc,GAaV;AAAA,MADDC,KACC;;AACJ,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEL,IADR;AAEE,MAAA,OAAO,EAAED,aAFX;AAGE,MAAA,SAAS,EAAG,UAASL,SAAS,GAAGA,SAAH,GAAe,EAAG,EAArC,CAAuCY,IAAvC,EAHb;AAIE,MAAA,KAAK,EAAEL,KAJT;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,OAAO,EAAE,KANX;AAOE,MAAA,KAAK,EAAE,IAPT;AAQE,MAAA,QAAQ,EAAC;AARX,OASMG,KATN;AAAA,iBAWGT,WAAW,iBACV,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,OAAO,EAAEG,aAAvB;AAAsC,QAAA,EAAE,EAAEK,aAA1C;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA,cAZJ,eAgBE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEO,WAAT;AAAA,kBAAuBR;AAAvB;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAFT;AAGE,MAAA,OAAO,EAAER,aAHX;AAAA,gBAKGD;AALH;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA3CD;;AA6CAL,MAAM,CAACe,YAAP,GAAsB;AACpBP,EAAAA,KAAK,EAAE,OADa;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,eAAeT,MAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Box } from 'theme-ui';\nimport RcDrawer from 'rc-drawer';\n\nconst Drawer = ({\n  className,\n  children,\n  closeButton,\n  closeButtonStyle,\n  drawerHandler,\n  toggleHandler,\n  open,\n  width,\n  placement,\n  drawerStyle,\n  closeBtnStyle,\n  ...props\n}) => {\n  return (\n    <Fragment>\n      <RcDrawer\n        open={open}\n        onClose={toggleHandler}\n        className={`drawer ${className ? className : ''}`.trim()}\n        width={width}\n        placement={placement}\n        handler={false}\n        level={null}\n        duration=\"0.4s\"\n        {...props}\n      >\n        {closeButton && (\n          <Box as=\"div\" onClick={toggleHandler} sx={closeBtnStyle}>\n            {closeButton}\n          </Box>\n        )}\n        <Box sx={drawerStyle}>{children}</Box>\n      </RcDrawer>\n      <Box\n        className=\"drawer__handler\"\n        style={{ display: 'inline-block' }}\n        onClick={toggleHandler}\n      >\n        {drawerHandler}\n      </Box>\n    </Fragment>\n  );\n};\n\nDrawer.defaultProps = {\n  width: '320px',\n  placement: 'left',\n};\n\nexport default Drawer;\n"]},"metadata":{},"sourceType":"module"}