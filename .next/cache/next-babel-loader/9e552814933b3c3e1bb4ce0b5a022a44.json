{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hal/github/CDN/CDN-Website/src/components/accordion/accordion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport { Image } from 'theme-ui';\nimport { BaseAccordion } from './base-accordion';\nimport accordionIconClose from 'assets/faq-one-plus.svg';\nimport accordionIconOpen from 'assets/faq-one-minus.svg';\nimport { AccordionButton, AccordionItem, AccordionContents, single, preventClose, combineReducers } from './shared';\nexport default function Accordion(_ref) {\n  let {\n    items\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"items\"]);\n\n  const openIcon = /*#__PURE__*/_jsxDEV(Image, {\n    src: accordionIconOpen,\n    alt: \"open icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 20\n  }, this);\n\n  const closeIcon = /*#__PURE__*/_jsxDEV(Image, {\n    src: accordionIconClose,\n    alt: \"close icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(BaseAccordion, _objectSpread(_objectSpread({\n    stateReducer: combineReducers(single, preventClose)\n  }, props), {}, {\n    children: ({\n      openIndexes,\n      handleItemClick\n    }) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(AccordionItem, {\n        isOpen: openIndexes.includes(index),\n        children: [/*#__PURE__*/_jsxDEV(AccordionButton, {\n          onClick: () => handleItemClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: openIndexes.includes(index) ? openIcon : closeIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), item.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AccordionContents, {\n          isOpen: openIndexes.includes(index),\n          children: item.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, item.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/hal/github/CDN/CDN-Website/src/components/accordion/accordion.js"],"names":["React","Fragment","Image","BaseAccordion","accordionIconClose","accordionIconOpen","AccordionButton","AccordionItem","AccordionContents","single","preventClose","combineReducers","Accordion","items","props","openIcon","closeIcon","openIndexes","handleItemClick","map","item","index","includes","title","contents"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,MAJF,EAKEC,YALF,EAMEC,eANF,QAOO,UAPP;AASA,eAAe,SAASC,SAAT,OAAwC;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAAA,MAATC,KAAS;;AACrD,QAAMC,QAAQ,gBAAG,QAAC,KAAD;AAAO,IAAA,GAAG,EAAEV,iBAAZ;AAA+B,IAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAjB;;AACA,QAAMW,SAAS,gBAAG,QAAC,KAAD;AAAO,IAAA,GAAG,EAAEZ,kBAAZ;AAAgC,IAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,UAAlB;;AACA,sBACE,QAAC,aAAD;AACE,IAAA,YAAY,EAAEO,eAAe,CAACF,MAAD,EAASC,YAAT;AAD/B,KAEMI,KAFN;AAAA,cAIG,CAAC;AAAEG,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAD,kBACC,QAAC,QAAD;AAAA,gBACGL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,QAAC,aAAD;AAEE,QAAA,MAAM,EAAEJ,WAAW,CAACK,QAAZ,CAAqBD,KAArB,CAFV;AAAA,gCAIE,QAAC,eAAD;AAAiB,UAAA,OAAO,EAAE,MAAMH,eAAe,CAACG,KAAD,CAA/C;AAAA,kCACE;AAAA,sBACGJ,WAAW,CAACK,QAAZ,CAAqBD,KAArB,IAA8BN,QAA9B,GAAyCC;AAD5C;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGI,IAAI,CAACG,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE,QAAC,iBAAD;AAAmB,UAAA,MAAM,EAAEN,WAAW,CAACK,QAAZ,CAAqBD,KAArB,CAA3B;AAAA,oBACGD,IAAI,CAACI;AADR;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SACOJ,IAAI,CAACG,KADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD","sourcesContent":["import React, { Fragment } from 'react';\nimport { Image } from 'theme-ui';\nimport { BaseAccordion } from './base-accordion';\nimport accordionIconClose from 'assets/faq-one-plus.svg';\nimport accordionIconOpen from 'assets/faq-one-minus.svg';\nimport {\n  AccordionButton,\n  AccordionItem,\n  AccordionContents,\n  single,\n  preventClose,\n  combineReducers,\n} from './shared';\n\nexport default function Accordion({ items, ...props }) {\n  const openIcon = <Image src={accordionIconOpen} alt=\"open icon\" />;\n  const closeIcon = <Image src={accordionIconClose} alt=\"close icon\" />;\n  return (\n    <BaseAccordion\n      stateReducer={combineReducers(single, preventClose)}\n      {...props}\n    >\n      {({ openIndexes, handleItemClick }) => (\n        <Fragment>\n          {items.map((item, index) => (\n            <AccordionItem\n              key={item.title}\n              isOpen={openIndexes.includes(index)}\n            >\n              <AccordionButton onClick={() => handleItemClick(index)}>\n                <span>\n                  {openIndexes.includes(index) ? openIcon : closeIcon}\n                </span>\n                {item.title}\n              </AccordionButton>\n              <AccordionContents isOpen={openIndexes.includes(index)}>\n                {item.contents}\n              </AccordionContents>\n            </AccordionItem>\n          ))}\n        </Fragment>\n      )}\n    </BaseAccordion>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}