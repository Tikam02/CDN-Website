{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hal/github/CDN/CDN-Website/src/contexts/drawer/drawer.provider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nimport { DrawerContext } from './drawer.context';\nconst initialState = {\n  isOpen: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: !state.isOpen\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const DrawerProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(DrawerContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/hal/github/CDN/CDN-Website/src/contexts/drawer/drawer.provider.js"],"names":["React","useReducer","DrawerContext","initialState","isOpen","reducer","state","action","type","DrawerProvider","children","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,6CACKF,KADL;AAEEF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFjB;;AAIF;AACE,aAAOE,KAAP;AAPJ;AASD;;AACD,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM;AAAA,OAACJ,KAAD;AAAA,OAAQK;AAAR,MAAoBV,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAA/B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPM","sourcesContent":["import React, { useReducer } from 'react';\nimport { DrawerContext } from './drawer.context';\nconst initialState = {\n  isOpen: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n    default:\n      return state;\n  }\n}\nexport const DrawerProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DrawerContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}